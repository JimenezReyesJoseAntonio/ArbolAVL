#BlueJ class context
comment0.target=AVLTree
comment0.text=\r\n\ Arbol\ AVL\:\ es\ un\ arbol\ binario\ balanceado,\ ordenado\ y\ no\r\n\ acepta\ nodos\ duplicados\r\n
comment1.params=key\ boleto
comment1.target=void\ insert(java.lang.String,\ Boleto)
comment10.params=n
comment10.target=void\ imprimirPre(Persona[])
comment10.text=Imprime\ el\ arbol\ con\ el\ reccorido\ PreOder
comment11.params=n
comment11.target=void\ imprimirPost(Persona[])
comment11.text=Imprime\ el\ arbol\ con\ el\ reccorido\ PostOder
comment12.params=nodo\ personas
comment12.target=void\ imprimir(AVLNode,\ Persona[])
comment13.params=nodo\ personas
comment13.target=void\ imprimirPre(AVLNode,\ Persona[])
comment14.params=nodo\ personas
comment14.target=void\ imprimirPost(AVLNode,\ Persona[])
comment15.params=
comment15.target=void\ imprimirXaltura()
comment16.params=nodo
comment16.target=void\ imprimirXaltura(AVLNode)
comment16.text=\r\n\ Imprime\ cada\ nodo\ linea\ por\ linea.\ Recorriendo\ el\ arbol\ desde\r\n\ el\ Nodo\ mas\ a\ la\ derecha\ hasta\ el\ nodo\ mas\ a\ la\ izquierda,\r\n\ y\ dejando\ una\ identacion\ de\ varios\ espacios\ en\ blanco\ segun\ su\r\n\ altura\ en\ el\ arbol\r\n
comment17.params=a\ cnt
comment17.target=java.lang.String\ replicate(java.lang.String,\ int)
comment17.text=\r\n\ Metodo\ estatico\ auxiliar\ que\ dada\ una\ cadena\ a\ y\ un\ enterto\ cnt\r\n\ replica\ o\ concatena\ esa\ cadena\ a,\ cnt\ veces\r\n
comment18.params=
comment18.target=int\ calcularAltura()
comment18.text=Obtiene\ la\ altura\ del\ arbol\ AVL
comment19.params=actual
comment19.target=int\ calcularAltura(AVLNode)
comment2.params=key\ t\ boleto
comment2.target=AVLNode\ insert(java.lang.Comparable,\ AVLNode,\ Boleto)
comment2.text=x\ es\ una\ instancia\ de\ una\ clase\ que\ implementa\ Comparable
comment20.params=n
comment20.target=void\ imprimirPorNiveles(Persona[])
comment20.text=Imprime\ el\ arbol\ por\ niveles.\ Comienza\ por\ la\ raiz.
comment21.params=nodo\ personas
comment21.target=void\ imprimirPorNiveles(AVLNode,\ Persona[])
comment21.text=Imprime\ el\ arbol\ por\ niveles\ con\ una\ descripcion.
comment22.params=aux\ key
comment22.target=Boleto\ buscarBoleto(AVLNode,\ java.lang.Comparable)
comment23.params=key
comment23.target=Boleto\ buscar(java.lang.String)
comment3.params=lhs\ rhs
comment3.target=int\ max(int,\ int)
comment4.params=k2
comment4.target=AVLNode\ rotateWithLeftChild(AVLNode)
comment5.params=k1
comment5.target=AVLNode\ rotateWithRightChild(AVLNode)
comment6.params=k3
comment6.target=AVLNode\ doubleWithLeftChild(AVLNode)
comment7.params=k1
comment7.target=AVLNode\ doubleWithRightChild(AVLNode)
comment8.params=t
comment8.target=int\ height(AVLNode)
comment9.params=n
comment9.target=void\ imprimir(Persona[])
comment9.text=Imprime\ el\ arbol\ con\ el\ recorrido\ InOrden
numComments=24
